{"version":3,"sources":["auth/local/passport.js"],"names":["setup","localAuthenticate","User","email","password","done","findOne","toLowerCase","exec","then","user","message","authenticate","authError","authenticated","catch","err","passport","use","LocalStrategy","usernameField","passwordField"],"mappings":";;;;;QA2BgBA,K,GAAAA,K;;AA3BhB;;;;AACA;;;;AAEA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,IAAlD,EAAwD;AACpDH,SAAKI,OAAL,CAAa;AACTH,eAAOA,MAAMI,WAAN;AADE,KAAb,EAEGC,IAFH,GAGKC,IAHL,CAGUC,QAAQ;AACV,YAAG,CAACA,IAAJ,EAAU;AACN,mBAAOL,KAAK,IAAL,EAAW,KAAX,EAAkB;AACrBM,yBAAS;AADY,aAAlB,CAAP;AAGH;AACDD,aAAKE,YAAL,CAAkBR,QAAlB,EAA4B,UAASS,SAAT,EAAoBC,aAApB,EAAmC;AAC3D,gBAAGD,SAAH,EAAc;AACV,uBAAOR,KAAKQ,SAAL,CAAP;AACH;AACD,gBAAG,CAACC,aAAJ,EAAmB;AACf,uBAAOT,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAEM,SAAS,+BAAX,EAAlB,CAAP;AACH,aAFD,MAEO;AACH,uBAAON,KAAK,IAAL,EAAWK,IAAX,CAAP;AACH;AACJ,SATD;AAUH,KAnBL,EAoBKK,KApBL,CAoBWC,OAAOX,KAAKW,GAAL,CApBlB;AAqBH;;AAEM,SAAShB,KAAT,CAAeE,IAAf,CAAmB,YAAnB,EAAiC;AACpCe,uBAASC,GAAT,CAAa,IAAIC,uBAAJ,CAAkB;AAC3BC,uBAAe,OADY;AAE3BC,uBAAe,UAFY,CAED;AAFC,KAAlB,EAGV,UAASlB,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AAC/B,eAAOJ,kBAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,IAAzC,CAAP;AACH,KALY,CAAb;AAMH","file":"passport.js","sourcesContent":["import passport from 'passport';\nimport {Strategy as LocalStrategy} from 'passport-local';\n\nfunction localAuthenticate(User, email, password, done) {\n    User.findOne({\n        email: email.toLowerCase()\n    }).exec()\n        .then(user => {\n            if(!user) {\n                return done(null, false, {\n                    message: 'This email is not registered.'\n                });\n            }\n            user.authenticate(password, function(authError, authenticated) {\n                if(authError) {\n                    return done(authError);\n                }\n                if(!authenticated) {\n                    return done(null, false, { message: 'This password is not correct.' });\n                } else {\n                    return done(null, user);\n                }\n            });\n        })\n        .catch(err => done(err));\n}\n\nexport function setup(User/*, config*/) {\n    passport.use(new LocalStrategy({\n        usernameField: 'email',\n        passwordField: 'password' // this is the virtual field on the model\n    }, function(email, password, done) {\n        return localAuthenticate(User, email, password, done);\n    }));\n}\n"]}