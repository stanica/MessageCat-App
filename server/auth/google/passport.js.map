{"version":3,"sources":["auth/google/passport.js"],"names":["setup","User","config","passport","use","GoogleStrategy","clientID","google","clientSecret","callbackURL","accessToken","refreshToken","profile","done","findOne","id","exec","then","user","name","displayName","email","emails","value","role","username","split","provider","_json","save","savedUser","catch","err"],"mappings":";;;;;QAGgBA,K,GAAAA,K;;AAHhB;;;;AACA;;;;AAEO,SAASA,KAAT,CAAeC,IAAf,EAAqBC,MAArB,EAA6B;AAChCC,uBAASC,GAAT,CAAa,IAAIC,6BAAJ,CAAmB;AAC5BC,kBAAUJ,OAAOK,MAAP,CAAcD,QADI;AAE5BE,sBAAcN,OAAOK,MAAP,CAAcC,YAFA;AAG5BC,qBAAaP,OAAOK,MAAP,CAAcE;AAHC,KAAnB,EAKb,UAASC,WAAT,EAAsBC,YAAtB,EAAoCC,OAApC,EAA6CC,IAA7C,EAAmD;AAC/CZ,aAAKa,OAAL,CAAa,EAAC,aAAaF,QAAQG,EAAtB,EAAb,EAAwCC,IAAxC,GACKC,IADL,CACUC,QAAQ;AACV,gBAAGA,IAAH,EAAS;AACL,uBAAOL,KAAK,IAAL,EAAWK,IAAX,CAAP;AACH;;AAEDA,mBAAO,IAAIjB,IAAJ,CAAS;AACZkB,sBAAMP,QAAQQ,WADF;AAEZC,uBAAOT,QAAQU,MAAR,CAAe,CAAf,EAAkBC,KAFb;AAGZC,sBAAM,MAHM;AAIZC,0BAAUb,QAAQU,MAAR,CAAe,CAAf,EAAkBC,KAAlB,CAAwBG,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAJE;AAKZC,0BAAU,QALE;AAMZpB,wBAAQK,QAAQgB;AANJ,aAAT,CAAP;AAQAV,iBAAKW,IAAL,GACKZ,IADL,CACUa,aAAajB,KAAK,IAAL,EAAWiB,SAAX,CADvB,EAEKC,KAFL,CAEWC,OAAOnB,KAAKmB,GAAL,CAFlB;AAGH,SAjBL,EAkBKD,KAlBL,CAkBWC,OAAOnB,KAAKmB,GAAL,CAlBlB;AAmBH,KAzBY,CAAb;AA0BH","file":"passport.js","sourcesContent":["import passport from 'passport';\nimport {Strategy as GoogleStrategy} from 'passport-google-oauth20';\n\nexport function setup(User, config) {\n    passport.use(new GoogleStrategy({\n        clientID: config.google.clientID,\n        clientSecret: config.google.clientSecret,\n        callbackURL: config.google.callbackURL\n    },\n    function(accessToken, refreshToken, profile, done) {\n        User.findOne({'google.id': profile.id}).exec()\n            .then(user => {\n                if(user) {\n                    return done(null, user);\n                }\n\n                user = new User({\n                    name: profile.displayName,\n                    email: profile.emails[0].value,\n                    role: 'user',\n                    username: profile.emails[0].value.split('@')[0],\n                    provider: 'google',\n                    google: profile._json\n                });\n                user.save()\n                    .then(savedUser => done(null, savedUser))\n                    .catch(err => done(err));\n            })\n            .catch(err => done(err));\n    }));\n}\n"]}