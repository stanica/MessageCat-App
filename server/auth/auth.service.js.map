{"version":3,"sources":["auth/auth.service.js"],"names":["isAuthenticated","hasRole","signToken","setTokenCookie","validateJwt","secret","config","secrets","session","use","req","res","next","query","hasOwnProperty","headers","authorization","access_token","cookies","token","User","findById","user","_id","exec","then","status","end","catch","err","roleRequired","Error","meetsRequirements","userRoles","indexOf","role","send","id","jwt","sign","expiresIn","cookie","redirect"],"mappings":"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","file":"auth.service.js","sourcesContent":["'use strict';\nimport config from '../config/environment';\nimport jwt from 'jsonwebtoken';\nimport expressJwt from 'express-jwt';\nimport compose from 'composable-middleware';\nimport User from '../api/user/user.model';\n\nvar validateJwt = expressJwt({\n    secret: config.secrets.session\n});\n\n/**\n * Attaches the user object to the request if authenticated\n * Otherwise returns 403\n */\nexport function isAuthenticated() {\n    return compose()\n        // Validate jwt\n        .use(function(req, res, next) {\n            // allow access_token to be passed through query parameter as well\n            if(req.query && req.query.hasOwnProperty('access_token')) {\n                req.headers.authorization = `Bearer ${req.query.access_token}`;\n            }\n            // IE11 forgets to set Authorization header sometimes. Pull from cookie instead.\n            if(req.query && typeof req.headers.authorization === 'undefined') {\n                req.headers.authorization = `Bearer ${req.cookies.token}`;\n            }\n            validateJwt(req, res, next);\n        })\n        // Attach user to request\n        .use(function(req, res, next) {\n            User.findById(req.user._id).exec()\n                .then(user => {\n                    if(!user) {\n                        return res.status(401).end();\n                    }\n                    req.user = user;\n                    next();\n                    return null;\n                })\n                .catch(err => next(err));\n        });\n}\n\n/**\n * Checks if the user role meets the minimum requirements of the route\n */\nexport function hasRole(roleRequired) {\n    if(!roleRequired) {\n        throw new Error('Required role needs to be set');\n    }\n\n    return compose()\n        .use(isAuthenticated())\n        .use(function meetsRequirements(req, res, next) {\n            if(config.userRoles.indexOf(req.user.role) >= config.userRoles.indexOf(roleRequired)) {\n                return next();\n            } else {\n                return res.status(403).send('Forbidden');\n            }\n        });\n}\n\n/**\n * Returns a jwt token signed by the app secret\n */\nexport function signToken(id, role) {\n    return jwt.sign({ _id: id, role }, config.secrets.session, {\n        expiresIn: 60 * 60 * 5\n    });\n}\n\n/**\n * Set token cookie directly for oAuth strategies\n */\nexport function setTokenCookie(req, res) {\n    if(!req.user) {\n        return res.status(404).send('It looks like you aren\\'t logged in, please try again.');\n    }\n    var token = signToken(req.user._id, req.user.role);\n    res.cookie('token', token);\n    res.redirect('/boards');\n}\n"]}