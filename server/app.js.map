{"version":3,"sources":["app.js"],"names":["mongoose","Promise","require","connect","config","mongo","uri","options","connection","on","err","console","error","process","exit","app","server","http","createServer","startServer","angularFullstack","listen","port","ip","log","get","exports","module"],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AANAA,mBAASC,OAAT,GAAmBC,QAAQ,UAAR,CAAnB;;;AASA;AACAF,mBAASG,OAAT,CAAiBC,sBAAOC,KAAP,CAAaC,GAA9B,EAAmCF,sBAAOC,KAAP,CAAaE,OAAhD;AACAP,mBAASQ,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,UAASC,GAAT,EAAc;AAC1CC,YAAQC,KAAR,CAAe,6BAA4BF,GAAI,EAA/C;AACAG,YAAQC,IAAR,CAAa,CAAC,CAAd,EAF0C,CAExB;AACrB,CAHD;;AAKA;AACA,IAAIC,MAAM,wBAAV;AACA,IAAIC,SAASC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEA,uBAAcA,GAAd;AACA,sBAAeA,GAAf;;AAEA;AACA,SAASI,WAAT,GAAuB;AACnBJ,QAAIK,gBAAJ,GAAuBJ,OAAOK,MAAP,CAAcjB,sBAAOkB,IAArB,EAA2BlB,sBAAOmB,EAAlC,EAAsC,YAAW;AACpEZ,gBAAQa,GAAR,CAAY,4CAAZ,EAA0DpB,sBAAOkB,IAAjE,EAAuEP,IAAIU,GAAJ,CAAQ,KAAR,CAAvE;AACH,KAFsB,CAAvB;AAGH;;AAGD,4BAAaN,WAAb;;AAEA;AACAO,UAAUC,OAAOD,OAAP,GAAiBX,GAA3B","file":"app.js","sourcesContent":["/**\n * Main application file\n */\n\n'use strict';\n\nimport express from 'express';\nimport mongoose from 'mongoose';\nmongoose.Promise = require('bluebird');\nimport config from './config/environment';\nimport http from 'http';\n\nimport expressConfig from './config/express';\nimport registerRoutes from './routes';\nimport seedDatabaseIfNeeded from './config/seed';\n\n\n// Connect to MongoDB\nmongoose.connect(config.mongo.uri, config.mongo.options);\nmongoose.connection.on('error', function(err) {\n    console.error(`MongoDB connection error: ${err}`);\n    process.exit(-1); // eslint-disable-line no-process-exit\n});\n\n// Setup server\nvar app = express();\nvar server = http.createServer(app);\n\nexpressConfig(app);\nregisterRoutes(app);\n\n// Start server\nfunction startServer() {\n    app.angularFullstack = server.listen(config.port, config.ip, function() {\n        console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n    });\n}\n\n\nsetImmediate(startServer);\n\n// Expose app\nexports = module.exports = app;\n"]}