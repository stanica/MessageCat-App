{"version":3,"sources":["api/user/user.controller.js"],"names":["index","create","show","destroy","changePassword","me","authCallback","validationError","res","statusCode","err","status","json","handleError","send","req","User","find","exec","then","users","catch","newUser","body","provider","role","save","user","token","jwt","sign","_id","config","secrets","session","expiresIn","next","userId","params","id","findById","end","profile","findByIdAndRemove","oldPass","String","oldPassword","newPass","newPassword","authenticate","password","findOne","redirect"],"mappings":"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","file":"user.controller.js","sourcesContent":["'use strict';\n\nimport User from './user.model';\nimport config from '../../config/environment';\nimport jwt from 'jsonwebtoken';\n\nfunction validationError(res, statusCode) {\n    statusCode = statusCode || 422;\n    return function(err) {\n        return res.status(statusCode).json(err);\n    };\n}\n\nfunction handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function(err) {\n        return res.status(statusCode).send(err);\n    };\n}\n\n/**\n * Get list of users\n * restriction: 'admin'\n */\nexport function index(req, res) {\n    return User.find({}, '-salt -password').exec()\n        .then(users => {\n            res.status(200).json(users);\n        })\n        .catch(handleError(res));\n}\n\n/**\n * Creates a new user\n */\nexport function create(req, res) {\n    var newUser = new User(req.body);\n    newUser.provider = 'local';\n    newUser.role = 'user';\n    return newUser.save()\n        .then(function(user) {\n            var token = jwt.sign({ _id: user._id }, config.secrets.session, {\n                expiresIn: 60 * 60 * 5\n            });\n            res.json({ token });\n        })\n        .catch(validationError(res));\n}\n\n/**\n * Get a single user\n */\nexport function show(req, res, next) {\n    var userId = req.params.id;\n\n    return User.findById(userId).exec()\n        .then(user => {\n            if(!user) {\n                return res.status(404).end();\n            }\n            res.json(user.profile);\n        })\n        .catch(err => next(err));\n}\n\n/**\n * Deletes a user\n * restriction: 'admin'\n */\nexport function destroy(req, res) {\n    return User.findByIdAndRemove(req.params.id).exec()\n        .then(function() {\n            res.status(204).end();\n        })\n        .catch(handleError(res));\n}\n\n/**\n * Change a users password\n */\nexport function changePassword(req, res) {\n    var userId = req.user._id;\n    var oldPass = String(req.body.oldPassword);\n    var newPass = String(req.body.newPassword);\n\n    return User.findById(userId).exec()\n        .then(user => {\n            if(user.authenticate(oldPass)) {\n                user.password = newPass;\n                return user.save()\n                    .then(() => {\n                        res.status(204).end();\n                    })\n                    .catch(validationError(res));\n            } else {\n                return res.status(403).end();\n            }\n        });\n}\n\n/**\n * Get my info\n */\nexport function me(req, res, next) {\n    var userId = req.user._id;\n\n    return User.findOne({ _id: userId }, '-salt -password').exec()\n        .then(user => { // don't ever give out the password or salt\n            if(!user) {\n                return res.status(401).end();\n            }\n            return res.json(user);\n        })\n        .catch(err => next(err));\n}\n\n/**\n * Authentication callback\n */\nexport function authCallback(req, res) {\n    res.redirect('/');\n}\n"]}